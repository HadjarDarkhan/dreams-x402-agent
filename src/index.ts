// src/index.ts
import { createAgentApp } from "@lucid-dreams/agent-kit";
import { playGame } from "./games"; // –º–∏ —Ü–µ –≤–∂–µ —Ä–æ–±–∏–ª–∏

const { app, addEntrypoint } = createAgentApp(
  {
    name: "Ponzi MiniGames x402 Agent",
    version: "1.0.2",
    description: "x402 mini-games (coin / lucky / dice) on Base, powered by daydreams",
  },
  {
    useConfigPayments: true,
  }
);

// üîß –ø–µ—Ä–µ—Ç–≤–æ—Ä—é–≤–∞—á —Ç–æ–≥–æ, —â–æ —à–ª–µ x402scan ‚Üí –Ω–∞ —Ç–µ, —â–æ —á–µ–∫–∞—î –Ω–∞—à –∫–æ–¥
function normalizePayload(raw: any) {
  const body = raw ?? {};

  // 1) —è–∫—É –≥—Ä—É –≥—Ä–∞—î–º–æ
  // x402scan –º–∞–π–∂–µ –∑–∞–≤–∂–¥–∏ –Ω—ñ—á–æ–≥–æ –Ω–µ —à–ª–µ ‚Üí —Å—Ç–∞–≤–∏–º–æ coin_flip
  const game =
    body.game ||
    body.mode ||
    body.type ||
    "coin_flip";

  // 2) —â–æ —Å–∞–º–µ –≤–∏–±—Ä–∞–≤ —é–∑–µ—Ä
  // —É —Ç–≤–æ—î–º—É —Å–∫—Ä—ñ–Ω—ñ –±—É–ª–æ "HEADS" ‚Äî —Ç–æ–±—Ç–æ —à–≤–∏–¥—à–µ –∑–∞ –≤—Å–µ –ª–µ—Ç–∏—Ç—å –ø–æ–ª–µ input
  const choiceRaw = body.choice || body.input || body.user_input || body.option;
  const choice = choiceRaw ? String(choiceRaw).toLowerCase() : "heads";

  // 3) –¥–ª—è lucky/dice
  const guess =
    body.guess ||
    body.number ||
    body.dice ||
    null;

  return { game, choice, guess };
}

// –º–∏ –∂ —Ä–æ–±–∏–ª–∏ 4 —Ç–∏—Ä–∞ ‚Üí –∑–∞–ª–∏—à–∞—î–º–æ
const tiers = [
  { key: "micro", price: "$0.01" },
  { key: "low", price: "$0.10" },
  { key: "mid", price: "$1" },
  { key: "high", price: "$10" },
];

for (const tier of tiers) {
  addEntrypoint({
    key: `play.${tier.key}`,
    // agent-kit —Å–∞–º –ø–æ–≤—ñ—Å–∏—Ç—å /entrypoints/play.X/invoke
    handler: async (ctx) => {
      // ctx.body –º–æ–∂–µ –±—É—Ç–∏ undefined ‚Üí –ª–æ–≤–∏–º–æ
      const payload = normalizePayload(ctx.body);
      // –≤—ñ–¥–¥–∞—î–º–æ —É–Ω—ñ—Ñ—ñ–∫–æ–≤–∞–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç
      const result = await playGame(payload);
      return {
        tier: tier.key,
        paid: true,
        ...result,
      };
    },
  });
}

export default app;
